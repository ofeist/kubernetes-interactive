# https://kubernetes.io/docs/tasks/
---
# this one next: https://leetcode.com/problemset/
#


--- get a commit or two
--

- all k8s issues:
    - https://github.com/kubernetes/kubernetes/issues

- there is a open task for setting labels when create service!
    - https://github.com/kubernetes/kubernetes/issues/46191    

- no daemonset/replicaset create command
    - instead "k create deployment" is used

- contributing, a guide
    - https://github.com/kubernetes/community/tree/master/contributors/guide

--
--- get a commit or two


- task: install v1.27

- task: upgrade cluster to 1.28.4
    - https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/

- task: upgrade linux nodes (+ drain the node)
    - https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/upgrading-linux-nodes/

-  a trick to expose a service when creating the pod, at the same time, one-liner
    $ kubectl run httpd --image=httpd:alpine --port=80 --expose=true

- taint the node
    $ kubectl taint nodes node-name key=value:taint-effect

- label the node, then find it
    $ kubectl get pods --selector app=App1

- backup etcd

- deployments rollback / rolling update

- is killed deployment automatically brought back online?

- practice tests <= 2.30

- a difference between ReplicaSet and DaemonSet?

- what is fluentd?

- kubectl quick reference (e.g. kubectl autocomplete)
    - https://kubernetes.io/docs/reference/kubectl/quick-reference/

- for vim easier editing
    set number
    set tabstop=2
    set expandtab
    set shiftwidth=2

- todo
    - 78. Practice Test - Multiple Schedulers
        - and above (< 78.)

- vi small tutor
    - https://docs.oracle.com/cd/E19455-01/806-2902/6jc3b36e2/index.html

- what-you-can-t-do-with-network-policies-at-least-not-yet
    - https://kubernetes.io/docs/concepts/services-networking/network-policies/#what-you-can-t-do-with-network-policies-at-least-not-yet


Google: “k8s certification weekends”
---
    https://www.reddit.com/r/kubernetes/comments/mfgln2/how_long_to_go_from_zero_experience_cka/
    
    https://support.kodekloud.com/preparing-for-the-kubernetes-certifications-cka-ckad

    https://www.zhaohuabing.com/post/2022-02-08-how-to-prepare-cka-en/

    
- deploy some other nw solution than weave
    - 217. Practice Test - Deploy Network Solution
    - take flannel e.g.
 
- continue practice tests
    - docker-registry was the last one
    - 167. Practice Test Service Accounts
        - go up from there
 
- use etcd as dns serv?
    - use redis?
    - implement as a go project

- configure tls bootstrap of the node
    - 275. More Certification Tips!

- how to bookmark links for the exam?
    - everybody says "bookmark links"

- easier way to create a service is to use "expose"
    - k expose deploy ... --type=NodePort ..
    - nodeport will have to be added with "k edit"

- what is downwardAPI?

- kubectl autocomplete 
    - https://kubernetes.io/pt-br/docs/reference/kubectl/cheatsheet/


- check container logs
    $ crictl ls
    $ crictl ps -a
    $ crictl logs 78e9e9652b8d7

- next to-do
    - 246. Practice Test - Deploy a Kubernetes Cluster using Kubeadm

- still not done???
    - 258. Practice Test - Worker Node Failure
    - https://kodekloud.com/topic/practice-test-cka-ingress-networking-1-2/
    - or covered already by ingress???

- check the lin version
    $ cat /etc/os-release

- host serviceName
    - how does this resolve a service dns?
    - from pod
        $ host myservice.namespace.svc.cluster.local    # same ns
        $ host myservice                                # diff ns

- pv and pvc
    - how to read from pvc?
    - like you would read from hostPath e.g.

- how can a docker container check if it has a capability?
    - https://stackoverflow.com/questions/46702043/how-can-a-docker-container-check-if-it-has-a-capability
    $ capsh --print | grep admin

- downward api
    - what is it

- check user auth, roles, rolebindings
    $ k auth can-i create deployment --as dev-user -n blue
    $ k auth can-i get pod/dark-blue-app --as dev-user -n blue
    $ k --as dev-user create deployment nginx --image=nginx
    $ k --as dev-user get pod/dark-blue-app -n blue

- practice again
    - create cluster
    - 167. Practice Test Service Accounts
    - 164. Practice Test - Cluster Roles and Role Bindings
    - 161. Practice Test - RBAC
    - token & sa
        - create web page
    - ingress

- check flux
    - https://fluxcd.io/

- continue with this and above
    155. Practice Test - KubeConfig





